#version: "3.9"
services:
  balancer:
    image: nginx_balancer:1.1.1
    container_name: balancer
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /APP/balancer/config:/etc/nginx
      - /APP/balancer/HTML
      - /LOGS/balancer:/LOGS
   # user: 1000:1000
    logging:
      driver: "json-file"
      options:
        max-size: "100K"
        max-file: "5"
    #/etc/hosts
    extra_hosts:
     - "nginx:12.12.0.2"
     - "node_1:12.12.0.3"
     - "node_2:12.12.0.4"
     - "node_3:12.12.0.5"
     - "node_4:12.12.0.6"
    networks:
      app_net:
        ipv4_address: 12.12.0.2
        #ipv6_address: 2001:3984:3989::10
    healthcheck:
      test: ["CMD-SHELL", "(service nginx status && curl -f http://nginx/health_check/) || exit 1"]
      # between checks
      interval: 30s
      # IF check is longer then failed
      timeout: 30s
      # Before unhealthy
      retries: 3
      # Фэйлы healthcheck в этот период игнорируются
      start_period: 60s
    deploy:
      resources:
        # MUST prevent container to allocate more
        limits:
          # number of cores
          cpus: '0.75'
          memory: '50M'
        reservations:
          cpus: '0.15'
          memory: '20M'
      restart_policy:
        condition: always
        # between fails
        delay: 5s
        # deciding if a restart has succeeded
        window: 60s
      #rollback_config:
      #update_config:
    working_dir: "/etc/nginx"

  node_1:
    image: app_nginx_server:1.1.0
    container_name: node_1
    expose: [80]
    #enviroment:
    #  - LANG="C.UTF-8"
    volumes:
      - /APP/node_1/HTML:/APP/HTML
      - /APP/node_1/config:/etc/nginx
      - /LOGS/node_1:/LOGS
    #user: 1000:1000
    depends_on:
      - balancer
    logging:
      driver: "json-file"
      options:
        max-size: "100K"
        max-file: "5"
    networks:
      app_net:
        ipv4_address: 12.12.0.3
          #ipv6_address: 2001:3984:3989::10
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '25M'
        reservations:
          cpus: '0.1'
          memory: '10M'
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 15s
        window: 120s
      #rollback_config:
      #update_config:
    working_dir: "/etc/nginx"

  node_2:
    image: app_nginx_server:1.1.0
    container_name: node_2
    expose: [80]
    #enviroment:
    #  - LANG="C.UTF-8"
    volumes:
      - /APP/node_2/HTML:/APP/HTML
      - /APP/node_2/config:/etc/nginx
      - /LOGS/node_2:/LOGS
    #user: 1000:1000
    depends_on:
      - balancer
    logging:
      driver: "json-file"
      options:
        max-size: "100K"
        max-file: "5"
    networks:
      app_net:
        ipv4_address: 12.12.0.4
        #ipv6_address: 2001:3984:3989::10
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '25M'
        reservations:
          cpus: '0.1'
          memory: '10M'
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 15s
        window: 120s
      #rollback_config:
      #update_config:
    working_dir: "/etc/nginx"

  node_3:
    image: app_nginx_server:1.1.0
    container_name: node_3
    expose: [80]
    #enviroment:
    #  - LANG="C.UTF-8"
    volumes:
      - /APP/node_3/HTML:/APP/HTML
      - /APP/node_3/config:/etc/nginx
      - /LOGS/node_3:/LOGS
    #user: 1000:1000
    depends_on:
      - balancer
    logging:
      driver: "json-file"
      options:
        max-size: "100K"
        max-file: "5"
    networks:
      app_net:
        ipv4_address: 12.12.0.5
        #ipv6_address: 2001:3984:3989::10
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '25M'
        reservations:
          cpus: '0.1'
          memory: '10M'
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 15s
        window: 120s
      #rollback_config:
      #update_config:
    working_dir: "/etc/nginx"

  node_4:
    image: app_nginx_server:1.1.0
    container_name: node_4
    expose: [80]
    #enviroment:
    #  - LANG="C.UTF-8"
    volumes:
      - /APP/node_4/HTML:/APP/HTML
      - /APP/node_4/config:/etc/nginx
      - /LOGS/node_4:/LOGS
    #user: 1000:1000
    depends_on:
      - balancer
    logging:
      driver: "json-file"
      options:
        max-size: "100K"
        max-file: "5"
    networks:
      app_net:
        ipv4_address: 12.12.0.6
        #ipv6_address: 2001:3984:3989::10
    healthcheck:
      test: ["CMD-SHELL", "service nginx status || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '25M'
        reservations:
          cpus: '0.1'
          memory: '10M'
      restart_policy:
        condition: on-failure
        max_attempts: 5
        delay: 15s
        window: 120s
      #rollback_config:
      #update_config:
    working_dir: "/etc/nginx"

networks:
  app_net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
      - subnet: 12.12.0.0/24
        ip_range: 12.12.0.0/24
        gateway: 12.12.0.1
      - subnet: 2001:3984:3989::/64
        gateway: 2001:3984:3989::1

